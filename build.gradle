buildscript {
	ext {
		springBootVersion = '1.3.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'checkstyle'

jar {
	baseName = 'cb-micro-services'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')
	compile('org.springframework.boot:spring-boot-starter-data-rest')
	compile('org.springframework.boot:spring-boot-starter-jersey')
//	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-web'){
		// We will be using Undertow for our HTTP container so we don't need Tomcat
		exclude module: 'spring-boot-starter-tomcat'
	}
	// Undertow will serve as the application's HTTP container
	compile('org.springframework.boot:spring-boot-starter-undertow')
	
	testCompile('org.codehaus.groovy:groovy-all:2.4.5')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('cglib:cglib-nodep:3.2.0')
	testCompile('com.jayway.jsonpath:json-path:2.1.0')
	testCompile("org.spockframework:spock-core:0.7-groovy-2.0")
}


eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}


File checkstyleConfigFile = file("${project.projectDir}/src/main/resources/config/checkstyle/checkstyle.xml")

checkstyle {
    configFile = checkstyleConfigFile
    ignoreFailures = true
}

